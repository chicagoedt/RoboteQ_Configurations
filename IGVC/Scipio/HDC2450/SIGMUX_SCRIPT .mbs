'Sigmux MicroBasic Script
'
'Engineer(s):			John Sabino, Tim Mueller-Sim
'Organization:			Chicago EDT
'Robot:				Scipio
'Competition:			IGVC
'Date Created:			12/14/2013
'Last Date Modified:		04/30/2015
'
'NOTES:
'		LED Status Codes:
'		+++++++++++++++++
'		LED 0 | LED 1 | LED 2 | STATUS
'		======|=======|=======|=======
'		  0   |   0   |   0   | RoboteQ off
'		  1   |   0   |   0   | RS-232 (Autonomous Mode)
'		  0   |   1   |   0   | Pulse  (Remote Control Mode)
'		  0   |   0   |   1   | Safe Mode
'
'
'For HDC2450 the pins are as follows:
' DIN 5 (pin 21) & DIN 6 (pin 22) & DIN 7 (pin 10)
' DOUT 4 (pin 7) & DOUT 5 (pin 20) & DOUT 6 (pin 8)
'
'
'Command Priority value table:
' CPRI [pp] [nn] 
' 		pp 	 	Channel
'	  -------------------
'		 0		  ALL		
'		 1		   1
'		 2         2
'		 3         3
'
'		nn		Mode
'	  ----------------------
'		 0		RS-232
'		 1		Pulse
'		 2		Analog
'		 3		Disabled
' MXMD [nn]
'		nn		Mode
'	  ----------------------
'		 0		Separate
'		 1		Mode 1
'		 2		Mode 2
'PINA [cc] (nn + mm)
'	cc = Input channel number
'	nn = 0 : unused
'	     1 : command
'            2 : feedback
'	mm = mot1*16 + mot2*32
'
'
'Revision Notes:
''''''''''''''''
' (12/14/2013) - File created and completed.
' (01/10/2014) - Corrected an issue where the unit goes into E-Stop whenever the button is released.
' (01/10/2014) - Added the pins that will be used on the HDC2450. 
' (01/10/2014) - Added a power LED.
' (03/12/2014) - Converted the pins to the HDC2450 for testing purposes.
' (03/13/2014) - Added debugging outputs over RS-232. Also added a table for the Command priority values.
'				 Modified the Button and LED variables to the correct values for the HDC2450.
' (04/08/2014) - Commented out all debug statements. Added operation mode configuration settings for RC and 
'  		 		 Autonomous. 
' (04/12/2014) - Removed the need for a button press to engage safety mode on startup.
' (05/30/2015) - Found this file, finally. Updating the configurations to match what we need.
'---------------------------------------------------------

'===============================================
'Instantiate Variables:
'===============================================
Dim Button[3] As Integer
Dim LED[3] As Integer
Dim Pulse[2] As Integer
'Dim Power_LED As Integer

'===============================================
'Initialize Variables: DIN 3(pin 4) & 4(pin 17) & 6(pin 22); DOUT 1(pin 18) & 2(pin 6) & 3(pin 19);
'===============================================
Button[0] = 3		 
Button[1] = 4
Button[2] = 6

LED[0] = 1
LED[1] = 2
LED[2] = 3

Pulse[0] = 1
Pulse[1] = 2

'Power_LED = 8

'===============================================
'Set the Power LED:
'===============================================
'SetCommand(_DSET, Power_LED)					'Set high to signal that the RoboteQ is on.

'===============================================
'Debug output
'===============================================
		'print("DEBUG: Sigmux is running...\n\n")
		'print("DEBUG: RoboteQ is now set to:")
'===============================================
'Check Buttons:
'===============================================
If GetValue(_DIN, Button[0]) = 1 Then		

	SetCommand(_MG, 1)				'Set E-Go to clear any E-Stop commands.
	SetConfig(_CPRI, 1, 0) 				'Set the Command Priority for Item 1 to RS-232.
	SetConfig(_MXMD, 0)				'Set the mixing configuation to Sepatate.
	SetConfig(_MMOD, 1, 1)				'Configure Motor 1 to be in Closed-Loop Mode
 	SetConfig(_MMOD, 2, 1)				'Configure Motor 2 to be in Closed-Loop Mode	
	SetCommand(_DSET, LED[0])			'Turn DOUT1 on.
	SetCommand(_DRES, LED[1])			'Turn DOUT2 off.
	SetCommand(_DRES, LED[2])			'Turn DOUT3 off.
		'print(" Autonomous Mode\n")			'Debug output
Else			
	
	If GetValue(_DIN, Button[1]) = 1 Then

		SetCommand(_MG, 1)			'Set E-Go to clear any E-Stop commands.
		SetConfig(_CPRI, 1, 1) 			'Set the Command Priority for Item 1 to Pulse.		
		SetConfig(_MXMD, 1)			'Set the mixing configuration to Mode 1.
		SetConfig(_PINA, Pulse[0], 17)		'Configure Pulse_1 (for just in case).	
		SetConfig(_PINA, Pulse[1], 33)		'Configure Pulse_2 (for just in case).
		SetConfig(_MMOD, 1, 0)			'Configure Motor 1 to be in Open-Loop Mode
 		SetConfig(_MMOD, 2, 0)			'Configure Motor 2 to be in Open-Loop Mode
		SetCommand(_DRES, LED[0])		'Turn DOUT1 off.		
		SetCommand(_DSET, LED[1])		'Turn DOUT2 on.
		SetCommand(_DRES, LED[2])		'Turn DOUT3 off.		
			'print(" RC Mode\n")			'Debug output
			
	Else
		SetConfig(_CPRI, 1, 3) 			'Set the Command Priority for Item 1 to Disabled.
		SetCommand(_EX, 1)			'Set E-Stop to prevent any issues. 
		SetCommand(_DRES, LED[0])		'Turn DOUT1 off.
		SetCommand(_DRES, LED[1])		'Turn DOUT2 off.
		SetCommand(_DSET, LED[2])		'Turn DOUT3 on.
			'print(" Safe Mode\n")			'Debug output
		
	End If	
End If
